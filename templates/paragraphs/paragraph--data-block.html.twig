{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }} style="background-image: url({{ file_url(content.field_data_block_background_imag[0]['#media'].field_media_image.entity.uri.value) }})">
    {% block content %}


      <div class="data-wrap">

            <div class="data-detail">
                {% if content.field_data_block_stat|render is not empty %}
                <div class="data-stat-1">
                    {{ content.field_data_block_stat[0]['#context']['value'] }}
                </div>
                {% endif %}

                {% if content.field_data_block_supporting|render is not empty %}
                <div class="data-supporting">
                    {{ content.field_data_block_supporting[0]['#context']['value'] }}
                </div>
                {% endif %}

                {% if content.field_data_block_stat|render is not empty %}
                <div class="data-stat-2">
                    {{ content.field_data_block_stat_2[0]['#context']['value'] }}
                </div>
                {% endif %}

            </div>
            <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0" y="0" viewBox="0 0 13 334" style="enable-background:new 0 0 13 334" xml:space="preserve"><style>.st0{fill:#243e89}</style><circle class="st0" cx="6.6" cy="6.1" r="6.2"/><circle class="st0" cx="6.6" cy="327.4" r="6.2"/><path class="st0" d="M5.1 11.8h3v311.4h-3z"/></svg>
            <div class="data-copy-wrap">
                {% if content.field_data_block_copy|render is not empty %}
                <div class="data-copy">
                    {{ content.field_data_block_copy[0]['#context']['value'] }}
                </div>
                {% endif %}
            </div>



        </div>




    


    {% endblock %}


  </div>
        {% if content.field_data_block_footnote|render is not empty %}
        <div class="data-footnote">
        {{ content.field_data_block_footnote[0]['#context']['value'] }}
        </div>
        {% endif %}


{% endblock paragraph %}
